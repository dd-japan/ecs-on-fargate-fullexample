### This file is used for detailed instruction of the ecs-task-definition-datadog.json 
to show you where need to be modified and how for each Datadog feature.
### For the Datadog API key, we suggest you to use AWS Secret Manager instead of plaintext for security condideration.

{
    "family": "python-api-task",
    "containerDefinitions": [
        {                                                                              # [Datadog][Cloud Security]To enable Workload Security
            "name": "cws-instrumentation-init",                                        # [Datadog][Cloud Security]To enable Workload Security
            "image": "public.ecr.aws/datadog/cws-instrumentation:latest",              # [Datadog][Cloud Security]To enable Workload Security
            "essential": false,                                                        # [Datadog][Cloud Security]To enable Workload Security
            "user": "0",                                                               # [Datadog][Cloud Security]To enable Workload Security
            "command": [                                                               # [Datadog][Cloud Security]To enable Workload Security
                "/cws-instrumentation",                                                # [Datadog][Cloud Security]To enable Workload Security
                "setup",                                                               # [Datadog][Cloud Security]To enable Workload Security
                "--cws-volume-mount",                                                  # [Datadog][Cloud Security]To enable Workload Security
                "/cws-instrumentation-volume"                                          # [Datadog][Cloud Security]To enable Workload Security
            ],                                                                         # [Datadog][Cloud Security]To enable Workload Security
            "mountPoints": [                                                           # [Datadog][Cloud Security]To enable Workload Security
                {                                                                      # [Datadog][Cloud Security]To enable Workload Security
                    "sourceVolume": "cws-instrumentation-volume",                      # [Datadog][Cloud Security]To enable Workload Security
                    "containerPath": "/cws-instrumentation-volume",                    # [Datadog][Cloud Security]To enable Workload Security
                    "readOnly": false                                                  # [Datadog][Cloud Security]To enable Workload Security
                }                                                                      # [Datadog][Cloud Security]To enable Workload Security
            ]                                                                          # [Datadog][Cloud Security]To enable Workload Security
        },                                                                             # [Datadog][Cloud Security]To enable Workload Security
        {                                                                              
            "cpu": 0,                                                                   
            "dependsOn": [                                                            
                {                                                                      # [Datadog][Agent][Optional]Make sure the agent is running
                    "condition": "HEALTHY",                                            # [Datadog][Agent][Optional]Make sure the agent is running 
                    "containerName": "datadog-agent"                                   # [Datadog][Agent][Optional]Make sure the agent is running
                },                                                                     # [Datadog][Agent][Optional]Make sure the agent is running
                {                                                                      # [Datadog][Agent]Must when Workload Security is required
                    "containerName": "cws-instrumentation-init",                       # [Datadog][Agent]Must when Workload Security is required
                    "condition": "SUCCESS"                                             # [Datadog][Agent]Must when Workload Security is required
                }                                                                      # [Datadog][Agent]Must when Workload Security is required
            ],
            "environment": [
                {                                                                      # [Datadog][APM][Optional]To enable IAST
                    "name": "DD_IAST_ENABLED",                                         # [Datadog][APM][Optional]To enable IAST
                    "value": "true"                                                    # [Datadog][APM][Optional]To enable IAST
                },                                                                     # [Datadog][APM][Optional]To enable IAST
                {                                    
                    "name": "PORT",
                    "value": "8000"
                },
                {                                                                      # [Datadog][APM][Optional]To enable APP&API Protection
                    "name": "DD_APPSEC_ENABLED",                                       # [Datadog][APM][Optional]To enable APP&API Protection
                    "value": "true"                                                    # [Datadog][APM][Optional]To enable APP&API Protection
                },                                                                     # [Datadog][APM][Optional]To enable APP&API Protection
                {
                    "name": "ENVIRONMENT",
                    "value": "demo"
                },
                {                                                                      # [Datadog][APM]To set the service name
                    "name": "DD_SERVICE",                                              # [Datadog][APM]To set the service name    
                    "value": "ecs-python-api"                                          # [Datadog][APM]To set the service name
                },                                                                     # [Datadog][APM]To set the service name
                {                                                                      # [Datadog][APM][Optinal]To connect logs to trace              
                    "name": "DD_LOGS_INJECTION",                                       # [Datadog][APM][Optinal]To connect logs to trace
                    "value": "true"                                                    # [Datadog][APM][Optinal]To connect logs to trace
                },                                                                     # [Datadog][APM][Optinal]To connect logs to trace
                {                                                                      # [Datadog][APM]To set the env name
                    "name": "DD_ENV",                                                  # [Datadog][APM]To set the env name
                    "value": "demo"                                                    # [Datadog][APM]To set the env name       
                },                                                                     # [Datadog][APM]To set the env name
                {                                                                      # [Datadog][APM][Optinal]To enable profiler
                    "name": "DD_PROFILING_ENABLED",                                    # [Datadog][APM][Optinal]To enable profiler
                    "value": "true"                                                    # [Datadog][APM][Optinal]To enable profiler
                },                                                                     # [Datadog][APM][Optinal]To enable profiler
                {                                                                      # [Datadog][APM][Optional]To enable SCA
                    "name": "DD_APPSEC_SCA_ENABLED",                                   # [Datadog][APM][Optional]To enable SCA
                    "value": "true"                                                    # [Datadog][APM][Optional]To enable SCA
                }                                                                      # [Datadog][APM][Optional]To enable SCA
            ],
            "essential": true,                                                         
            "healthCheck": {
                "command": [
                    "CMD-SHELL",
                    "curl -f http://localhost:8000/health || exit 1"
                ],
                "interval": 30,
                "retries": 5,
                "startPeriod": 120,
                "timeout": 15
            },
            "image": "<python-api-image-url>",
            "logConfiguration": {                       
                "logDriver": "awsfirelens",                                             # [Datadog][Logs]To collect container logs
                "options": {                                                            # [Datadog][Logs]To collect container logs
                  "Name": "datadog",                                                    # [Datadog][Logs]To collect container logs
                  "apikey": "<datadog-api-key>",                                        # [Datadog][Logs]To collect container logs
                  "Host": "<datadog-site>",                                             # [Datadog][Logs]To collect container logs
                  "dd_service": "ecs-python-api",                                       # [Datadog][Logs]To collect container logs
                  "dd_source": "python",                                                # [Datadog][Logs]To collect container logs
                  "dd_message_key": "log",                                              # [Datadog][Logs]To collect container logs
                  "dd_tags": "use:demo,arch:ecs_fargate",                               # [Datadog][Logs]To collect container logs
                  "TLS": "on",                                                          # [Datadog][Logs]To collect container logs
                  "provider": "ecs"                                                     # [Datadog][Logs]To collect container logs
                }                                                                       # [Datadog][Logs]To collect container logs
            },
            "memory": 512,
            "mountPoints": [
                {                                                                       # [Datadog][Cloud Security]To enable Workload Security
                    "sourceVolume": "cws-instrumentation-volume",                       # [Datadog][Cloud Security]To enable Workload Security
                    "containerPath": "/cws-instrumentation-volume",                     # [Datadog][Cloud Security]To enable Workload Security
                    "readOnly": true                                                    # [Datadog][Cloud Security]To enable Workload Security
                }                                                                       # [Datadog][Cloud Security]To enable Workload Security
            ],
            "name": "python-api-container",
            "portMappings": [
                {
                    "containerPort": 8000,
                    "name": "python-api-container-8000-tcp",
                    "protocol": "tcp"
                }
            ],
            "systemControls": [],
            "volumesFrom": [], 
            "entryPoint": [                                                             # [Datadog][Cloud Security]To enable Workload Security
                "/cws-instrumentation-volume/cws-instrumentation",                      # [Datadog][Cloud Security]To enable Workload Security
                "trace",                                                                # [Datadog][Cloud Security]To enable Workload Security
                "--"                                                                    # [Datadog][Cloud Security]To enable Workload Security
            ],                                                                          # [Datadog][Cloud Security]To enable Workload Security
            "command": [                                                                # [Datadog][Cloud Security]To enable Workload Security
                "ddtrace-run",                                                          # [Datadog][Cloud Security]To enable Workload Security
                "gunicorn",                                                             # [Datadog][Cloud Security]To enable Workload Security
                "--bind", "0.0.0.0:8000",                                               # [Datadog][Cloud Security]To enable Workload Security
                "--workers", "1",                                                       # [Datadog][Cloud Security]To enable Workload Security
                "--timeout", "30",                                                      # [Datadog][Cloud Security]To enable Workload Security
                "--keep-alive", "2",                                                    # [Datadog][Cloud Security]To enable Workload Security
                "--max-requests", "1000",                                               # [Datadog][Cloud Security]To enable Workload Security
                "app:app"                                                               # [Datadog][Cloud Security]To enable Workload Security
            ]                                                                           # [Datadog][Cloud Security]To enable Workload Security
        },
# [Datadog][Agent]From here is the container definition of the Datadog Agent
        {                                                                               
            "cpu": 0,                                                                   
            "environment": [                                                                             
                {                                                                       # [Datadog][APM]To enable APM
                    "name": "DD_APM_NON_LOCAL_TRAFFIC",                                 # [Datadog][APM]To enable APM
                    "value": "true"                                                     # [Datadog][APM]To enable APM
                },                                                                      # [Datadog][APM]To enable APM
                {                                                                       # [Datadog][Agent]To set the Datadog API Key
                    "name": "DD_API_KEY",                                               # [Datadog][Agent]To set the Datadog API Key
                    "value": "<datadog-api-key>"                                        # [Datadog][Agent]To set the Datadog API Key
                },                                                                      # [Datadog][Agent]To set the Datadog API Key
                {                                                                       # [Datadog][Agent]To set the Datadog SITE
                    "name": "DD_SITE",                                                  # [Datadog][Agent]To set the Datadog SITE
                    "value": "<datadog-site>"                                           # [Datadog][Agent]To set the Datadog SITE
                },                                                                      # [Datadog][Agent]To set the Datadog SITE
                {                                                                       # [Datadog][Agent]To collect container processes
                    "name": "DD_PROCESS_AGENT_PROCESS_COLLECTION_ENABLED",              # [Datadog][Agent]To collect container processes
                    "value": "true"                                                     # [Datadog][Agent]To collect container processes
                },                                                                      # [Datadog][Agent]To collect container processes
                {
                    "name": "ECS_FARGATE",
                    "value": "true"
                },
                {                                                                       # [Datadog][Agent]To enable APM
                    "name": "DD_APM_ENABLED",                                           # [Datadog][Agent]To enable APM
                    "value": "true"                                                     # [Datadog][Agent]To enable APM
                },                                                                      # [Datadog][Agent]To enable APM
                {                                                                       # [Datadog][Agent]To set env of the task
                    "name": "ENV",                                                      # [Datadog][Agent]To set env of the task
                    "value": "demo"                                                     # [Datadog][Agent]To set env of the task
                },                                                                      # [Datadog][Agent]To set env of the task
                {                                                                       # [Datadog][Cloud Security]To enable Cloud Security
                    "name": "DD_RUNTIME_SECURITY_CONFIG_ENABLED",                       # [Datadog][Cloud Security]To enable Cloud Security
                    "value": "true"                                                     # [Datadog][Cloud Security]To enable Cloud Security
                },                                                                      # [Datadog][Cloud Security]To enable Cloud Security
                {                                                                       # [Datadog][Cloud Security]To enable Vulnerability Scan
                    "name": "DD_RUNTIME_SECURITY_CONFIG_EBPFLESS_ENABLED",              # [Datadog][Cloud Security]To enable Vulnerability Scan
                    "value": "true"                                                     # [Datadog][Cloud Security]To enable Vulnerability Scan
                }                                                                       # [Datadog][Cloud Security]To enable Vulnerability Scan
            ],
            "essential": true,
            "healthCheck": {
                "command": [
                    "CMD-SHELL",
                    "/probe.sh"
                ],
                "interval": 30,
                "retries": 2,
                "startPeriod": 60,
                "timeout": 5
            },
            "image": "public.ecr.aws/datadog/agent:latest",
            "memory": 256,
            "mountPoints": [],
            "name": "datadog-agent",
            "portMappings": [],
            "systemControls": [],
            "volumesFrom": []
        },
# [Datadog][Agent]The container definition of the Datadog Agent ends here
# [Datadog][Logs]From here is the container definition for the log router
        {
            "essential": true,
            "image": "amazon/aws-for-fluent-bit:stable",
            "name": "log_router",
            "firelensConfiguration": {
              "type": "fluentbit",
              "options": {
                "enable-ecs-log-metadata": "true",
                "config-file-type": "file",
                "config-file-value": "/fluent-bit/configs/parse-json.conf"
              }
            }
          }
# [Datadog][Logs]The container definition for the log router ends here
    ],                                                                                  
    "taskRoleArn": "<ecstaskrole-arn>",
    "executionRoleArn": "<ecstaskexecutionrole-arn>",
    "networkMode": "awsvpc",
    "volumes": [
        {                                                                                # [Datadog][Cloud Security]To enable Workload Security
            "name": "cws-instrumentation-volume"                                         # [Datadog][Cloud Security]To enable Workload Security
        }                                                                                # [Datadog][Cloud Security]To enable Workload Security
    ],
    "placementConstraints": [],
    "requiresCompatibilities": [
        "FARGATE"
    ],
    "cpu": "512",
    "memory": "1024",
    "pidMode": "task",                                                                   # [Datadog][Agent]To collect container processes
    "runtimePlatform": {
        "cpuArchitecture": "X86_64",
        "operatingSystemFamily": "LINUX"
    }
}
